/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthenticatedRouteRouteImport } from './routes/_authenticated/route'
import { Route as AuthenticatedIndexRouteImport } from './routes/_authenticated/index'
import { Route as AuthenticatedSlugNameRouteImport } from './routes/_authenticated/$slugName'
import { Route as errors503RouteImport } from './routes/(errors)/503'
import { Route as errors500RouteImport } from './routes/(errors)/500'
import { Route as errors404RouteImport } from './routes/(errors)/404'
import { Route as errors403RouteImport } from './routes/(errors)/403'
import { Route as errors401RouteImport } from './routes/(errors)/401'
import { Route as authSignUpRouteImport } from './routes/(auth)/sign-up'
import { Route as authSignIn2RouteImport } from './routes/(auth)/sign-in-2'
import { Route as authSignInRouteImport } from './routes/(auth)/sign-in'
import { Route as authOtpRouteImport } from './routes/(auth)/otp'
import { Route as authForgotPasswordRouteImport } from './routes/(auth)/forgot-password'
import { Route as AuthenticatedSettingsRouteRouteImport } from './routes/_authenticated/settings/route'
import { Route as AuthenticatedAdminRouteRouteImport } from './routes/_authenticated/admin/route'
import { Route as AuthenticatedYouIndexRouteImport } from './routes/_authenticated/you/index'
import { Route as AuthenticatedSubscriptionsIndexRouteImport } from './routes/_authenticated/subscriptions/index'
import { Route as AuthenticatedSettingsIndexRouteImport } from './routes/_authenticated/settings/index'
import { Route as AuthenticatedCreatorIndexRouteImport } from './routes/_authenticated/creator/index'
import { Route as AuthenticatedBrowseIndexRouteImport } from './routes/_authenticated/browse/index'
import { Route as AuthenticatedAdminIndexRouteImport } from './routes/_authenticated/admin/index'
import { Route as AuthenticatedSubscriptionsSuccessRouteImport } from './routes/_authenticated/subscriptions/success'
import { Route as AuthenticatedSubscriptionsCancelRouteImport } from './routes/_authenticated/subscriptions/cancel'
import { Route as AuthenticatedSettingsNotificationsRouteImport } from './routes/_authenticated/settings/notifications'
import { Route as AuthenticatedSettingsDisplayRouteImport } from './routes/_authenticated/settings/display'
import { Route as AuthenticatedSettingsAppearanceRouteImport } from './routes/_authenticated/settings/appearance'
import { Route as AuthenticatedSettingsAccountRouteImport } from './routes/_authenticated/settings/account'
import { Route as AuthenticatedSChatPopupRouteImport } from './routes/_authenticated/s/chat-popup'
import { Route as AuthenticatedSStationSlugRouteImport } from './routes/_authenticated/s/$stationSlug'
import { Route as AuthenticatedYouLibraryIndexRouteImport } from './routes/_authenticated/you/library/index'
import { Route as AuthenticatedSNewIndexRouteImport } from './routes/_authenticated/s/new/index'
import { Route as AuthenticatedAdminUsersIndexRouteImport } from './routes/_authenticated/admin/users/index'
import { Route as AuthenticatedAdminSubscriptionsIndexRouteImport } from './routes/_authenticated/admin/subscriptions/index'
import { Route as AuthenticatedAdminStationsIndexRouteImport } from './routes/_authenticated/admin/stations/index'
import { Route as AuthenticatedAdminReportsIndexRouteImport } from './routes/_authenticated/admin/reports/index'
import { Route as AuthenticatedAdminModerationIndexRouteImport } from './routes/_authenticated/admin/moderation/index'
import { Route as AuthenticatedAdminGenresIndexRouteImport } from './routes/_authenticated/admin/genres/index'
import { Route as AuthenticatedAdminFeedbackIndexRouteImport } from './routes/_authenticated/admin/feedback/index'
import { Route as AuthenticatedAdminCountriesIndexRouteImport } from './routes/_authenticated/admin/countries/index'

const AuthenticatedRouteRoute = AuthenticatedRouteRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedIndexRoute = AuthenticatedIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedSlugNameRoute = AuthenticatedSlugNameRouteImport.update({
  id: '/$slugName',
  path: '/$slugName',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const errors503Route = errors503RouteImport.update({
  id: '/(errors)/503',
  path: '/503',
  getParentRoute: () => rootRouteImport,
} as any)
const errors500Route = errors500RouteImport.update({
  id: '/(errors)/500',
  path: '/500',
  getParentRoute: () => rootRouteImport,
} as any)
const errors404Route = errors404RouteImport.update({
  id: '/(errors)/404',
  path: '/404',
  getParentRoute: () => rootRouteImport,
} as any)
const errors403Route = errors403RouteImport.update({
  id: '/(errors)/403',
  path: '/403',
  getParentRoute: () => rootRouteImport,
} as any)
const errors401Route = errors401RouteImport.update({
  id: '/(errors)/401',
  path: '/401',
  getParentRoute: () => rootRouteImport,
} as any)
const authSignUpRoute = authSignUpRouteImport.update({
  id: '/(auth)/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRouteImport,
} as any)
const authSignIn2Route = authSignIn2RouteImport.update({
  id: '/(auth)/sign-in-2',
  path: '/sign-in-2',
  getParentRoute: () => rootRouteImport,
} as any)
const authSignInRoute = authSignInRouteImport.update({
  id: '/(auth)/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const authOtpRoute = authOtpRouteImport.update({
  id: '/(auth)/otp',
  path: '/otp',
  getParentRoute: () => rootRouteImport,
} as any)
const authForgotPasswordRoute = authForgotPasswordRouteImport.update({
  id: '/(auth)/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedSettingsRouteRoute =
  AuthenticatedSettingsRouteRouteImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedAdminRouteRoute = AuthenticatedAdminRouteRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedYouIndexRoute = AuthenticatedYouIndexRouteImport.update({
  id: '/you/',
  path: '/you/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedSubscriptionsIndexRoute =
  AuthenticatedSubscriptionsIndexRouteImport.update({
    id: '/subscriptions/',
    path: '/subscriptions/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedSettingsIndexRoute =
  AuthenticatedSettingsIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)
const AuthenticatedCreatorIndexRoute =
  AuthenticatedCreatorIndexRouteImport.update({
    id: '/creator/',
    path: '/creator/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedBrowseIndexRoute =
  AuthenticatedBrowseIndexRouteImport.update({
    id: '/browse/',
    path: '/browse/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedAdminIndexRoute = AuthenticatedAdminIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedAdminRouteRoute,
} as any)
const AuthenticatedSubscriptionsSuccessRoute =
  AuthenticatedSubscriptionsSuccessRouteImport.update({
    id: '/subscriptions/success',
    path: '/subscriptions/success',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedSubscriptionsCancelRoute =
  AuthenticatedSubscriptionsCancelRouteImport.update({
    id: '/subscriptions/cancel',
    path: '/subscriptions/cancel',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedSettingsNotificationsRoute =
  AuthenticatedSettingsNotificationsRouteImport.update({
    id: '/notifications',
    path: '/notifications',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)
const AuthenticatedSettingsDisplayRoute =
  AuthenticatedSettingsDisplayRouteImport.update({
    id: '/display',
    path: '/display',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)
const AuthenticatedSettingsAppearanceRoute =
  AuthenticatedSettingsAppearanceRouteImport.update({
    id: '/appearance',
    path: '/appearance',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)
const AuthenticatedSettingsAccountRoute =
  AuthenticatedSettingsAccountRouteImport.update({
    id: '/account',
    path: '/account',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)
const AuthenticatedSChatPopupRoute = AuthenticatedSChatPopupRouteImport.update({
  id: '/s/chat-popup',
  path: '/s/chat-popup',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedSStationSlugRoute =
  AuthenticatedSStationSlugRouteImport.update({
    id: '/s/$stationSlug',
    path: '/s/$stationSlug',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedYouLibraryIndexRoute =
  AuthenticatedYouLibraryIndexRouteImport.update({
    id: '/you/library/',
    path: '/you/library/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedSNewIndexRoute = AuthenticatedSNewIndexRouteImport.update({
  id: '/s/new/',
  path: '/s/new/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedAdminUsersIndexRoute =
  AuthenticatedAdminUsersIndexRouteImport.update({
    id: '/users/',
    path: '/users/',
    getParentRoute: () => AuthenticatedAdminRouteRoute,
  } as any)
const AuthenticatedAdminSubscriptionsIndexRoute =
  AuthenticatedAdminSubscriptionsIndexRouteImport.update({
    id: '/subscriptions/',
    path: '/subscriptions/',
    getParentRoute: () => AuthenticatedAdminRouteRoute,
  } as any)
const AuthenticatedAdminStationsIndexRoute =
  AuthenticatedAdminStationsIndexRouteImport.update({
    id: '/stations/',
    path: '/stations/',
    getParentRoute: () => AuthenticatedAdminRouteRoute,
  } as any)
const AuthenticatedAdminReportsIndexRoute =
  AuthenticatedAdminReportsIndexRouteImport.update({
    id: '/reports/',
    path: '/reports/',
    getParentRoute: () => AuthenticatedAdminRouteRoute,
  } as any)
const AuthenticatedAdminModerationIndexRoute =
  AuthenticatedAdminModerationIndexRouteImport.update({
    id: '/moderation/',
    path: '/moderation/',
    getParentRoute: () => AuthenticatedAdminRouteRoute,
  } as any)
const AuthenticatedAdminGenresIndexRoute =
  AuthenticatedAdminGenresIndexRouteImport.update({
    id: '/genres/',
    path: '/genres/',
    getParentRoute: () => AuthenticatedAdminRouteRoute,
  } as any)
const AuthenticatedAdminFeedbackIndexRoute =
  AuthenticatedAdminFeedbackIndexRouteImport.update({
    id: '/feedback/',
    path: '/feedback/',
    getParentRoute: () => AuthenticatedAdminRouteRoute,
  } as any)
const AuthenticatedAdminCountriesIndexRoute =
  AuthenticatedAdminCountriesIndexRouteImport.update({
    id: '/countries/',
    path: '/countries/',
    getParentRoute: () => AuthenticatedAdminRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/admin': typeof AuthenticatedAdminRouteRouteWithChildren
  '/settings': typeof AuthenticatedSettingsRouteRouteWithChildren
  '/forgot-password': typeof authForgotPasswordRoute
  '/otp': typeof authOtpRoute
  '/sign-in': typeof authSignInRoute
  '/sign-in-2': typeof authSignIn2Route
  '/sign-up': typeof authSignUpRoute
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/$slugName': typeof AuthenticatedSlugNameRoute
  '/': typeof AuthenticatedIndexRoute
  '/s/$stationSlug': typeof AuthenticatedSStationSlugRoute
  '/s/chat-popup': typeof AuthenticatedSChatPopupRoute
  '/settings/account': typeof AuthenticatedSettingsAccountRoute
  '/settings/appearance': typeof AuthenticatedSettingsAppearanceRoute
  '/settings/display': typeof AuthenticatedSettingsDisplayRoute
  '/settings/notifications': typeof AuthenticatedSettingsNotificationsRoute
  '/subscriptions/cancel': typeof AuthenticatedSubscriptionsCancelRoute
  '/subscriptions/success': typeof AuthenticatedSubscriptionsSuccessRoute
  '/admin/': typeof AuthenticatedAdminIndexRoute
  '/browse': typeof AuthenticatedBrowseIndexRoute
  '/creator': typeof AuthenticatedCreatorIndexRoute
  '/settings/': typeof AuthenticatedSettingsIndexRoute
  '/subscriptions': typeof AuthenticatedSubscriptionsIndexRoute
  '/you': typeof AuthenticatedYouIndexRoute
  '/admin/countries': typeof AuthenticatedAdminCountriesIndexRoute
  '/admin/feedback': typeof AuthenticatedAdminFeedbackIndexRoute
  '/admin/genres': typeof AuthenticatedAdminGenresIndexRoute
  '/admin/moderation': typeof AuthenticatedAdminModerationIndexRoute
  '/admin/reports': typeof AuthenticatedAdminReportsIndexRoute
  '/admin/stations': typeof AuthenticatedAdminStationsIndexRoute
  '/admin/subscriptions': typeof AuthenticatedAdminSubscriptionsIndexRoute
  '/admin/users': typeof AuthenticatedAdminUsersIndexRoute
  '/s/new': typeof AuthenticatedSNewIndexRoute
  '/you/library': typeof AuthenticatedYouLibraryIndexRoute
}
export interface FileRoutesByTo {
  '/forgot-password': typeof authForgotPasswordRoute
  '/otp': typeof authOtpRoute
  '/sign-in': typeof authSignInRoute
  '/sign-in-2': typeof authSignIn2Route
  '/sign-up': typeof authSignUpRoute
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/$slugName': typeof AuthenticatedSlugNameRoute
  '/': typeof AuthenticatedIndexRoute
  '/s/$stationSlug': typeof AuthenticatedSStationSlugRoute
  '/s/chat-popup': typeof AuthenticatedSChatPopupRoute
  '/settings/account': typeof AuthenticatedSettingsAccountRoute
  '/settings/appearance': typeof AuthenticatedSettingsAppearanceRoute
  '/settings/display': typeof AuthenticatedSettingsDisplayRoute
  '/settings/notifications': typeof AuthenticatedSettingsNotificationsRoute
  '/subscriptions/cancel': typeof AuthenticatedSubscriptionsCancelRoute
  '/subscriptions/success': typeof AuthenticatedSubscriptionsSuccessRoute
  '/admin': typeof AuthenticatedAdminIndexRoute
  '/browse': typeof AuthenticatedBrowseIndexRoute
  '/creator': typeof AuthenticatedCreatorIndexRoute
  '/settings': typeof AuthenticatedSettingsIndexRoute
  '/subscriptions': typeof AuthenticatedSubscriptionsIndexRoute
  '/you': typeof AuthenticatedYouIndexRoute
  '/admin/countries': typeof AuthenticatedAdminCountriesIndexRoute
  '/admin/feedback': typeof AuthenticatedAdminFeedbackIndexRoute
  '/admin/genres': typeof AuthenticatedAdminGenresIndexRoute
  '/admin/moderation': typeof AuthenticatedAdminModerationIndexRoute
  '/admin/reports': typeof AuthenticatedAdminReportsIndexRoute
  '/admin/stations': typeof AuthenticatedAdminStationsIndexRoute
  '/admin/subscriptions': typeof AuthenticatedAdminSubscriptionsIndexRoute
  '/admin/users': typeof AuthenticatedAdminUsersIndexRoute
  '/s/new': typeof AuthenticatedSNewIndexRoute
  '/you/library': typeof AuthenticatedYouLibraryIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/_authenticated/admin': typeof AuthenticatedAdminRouteRouteWithChildren
  '/_authenticated/settings': typeof AuthenticatedSettingsRouteRouteWithChildren
  '/(auth)/forgot-password': typeof authForgotPasswordRoute
  '/(auth)/otp': typeof authOtpRoute
  '/(auth)/sign-in': typeof authSignInRoute
  '/(auth)/sign-in-2': typeof authSignIn2Route
  '/(auth)/sign-up': typeof authSignUpRoute
  '/(errors)/401': typeof errors401Route
  '/(errors)/403': typeof errors403Route
  '/(errors)/404': typeof errors404Route
  '/(errors)/500': typeof errors500Route
  '/(errors)/503': typeof errors503Route
  '/_authenticated/$slugName': typeof AuthenticatedSlugNameRoute
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/s/$stationSlug': typeof AuthenticatedSStationSlugRoute
  '/_authenticated/s/chat-popup': typeof AuthenticatedSChatPopupRoute
  '/_authenticated/settings/account': typeof AuthenticatedSettingsAccountRoute
  '/_authenticated/settings/appearance': typeof AuthenticatedSettingsAppearanceRoute
  '/_authenticated/settings/display': typeof AuthenticatedSettingsDisplayRoute
  '/_authenticated/settings/notifications': typeof AuthenticatedSettingsNotificationsRoute
  '/_authenticated/subscriptions/cancel': typeof AuthenticatedSubscriptionsCancelRoute
  '/_authenticated/subscriptions/success': typeof AuthenticatedSubscriptionsSuccessRoute
  '/_authenticated/admin/': typeof AuthenticatedAdminIndexRoute
  '/_authenticated/browse/': typeof AuthenticatedBrowseIndexRoute
  '/_authenticated/creator/': typeof AuthenticatedCreatorIndexRoute
  '/_authenticated/settings/': typeof AuthenticatedSettingsIndexRoute
  '/_authenticated/subscriptions/': typeof AuthenticatedSubscriptionsIndexRoute
  '/_authenticated/you/': typeof AuthenticatedYouIndexRoute
  '/_authenticated/admin/countries/': typeof AuthenticatedAdminCountriesIndexRoute
  '/_authenticated/admin/feedback/': typeof AuthenticatedAdminFeedbackIndexRoute
  '/_authenticated/admin/genres/': typeof AuthenticatedAdminGenresIndexRoute
  '/_authenticated/admin/moderation/': typeof AuthenticatedAdminModerationIndexRoute
  '/_authenticated/admin/reports/': typeof AuthenticatedAdminReportsIndexRoute
  '/_authenticated/admin/stations/': typeof AuthenticatedAdminStationsIndexRoute
  '/_authenticated/admin/subscriptions/': typeof AuthenticatedAdminSubscriptionsIndexRoute
  '/_authenticated/admin/users/': typeof AuthenticatedAdminUsersIndexRoute
  '/_authenticated/s/new/': typeof AuthenticatedSNewIndexRoute
  '/_authenticated/you/library/': typeof AuthenticatedYouLibraryIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/admin'
    | '/settings'
    | '/forgot-password'
    | '/otp'
    | '/sign-in'
    | '/sign-in-2'
    | '/sign-up'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/$slugName'
    | '/'
    | '/s/$stationSlug'
    | '/s/chat-popup'
    | '/settings/account'
    | '/settings/appearance'
    | '/settings/display'
    | '/settings/notifications'
    | '/subscriptions/cancel'
    | '/subscriptions/success'
    | '/admin/'
    | '/browse'
    | '/creator'
    | '/settings/'
    | '/subscriptions'
    | '/you'
    | '/admin/countries'
    | '/admin/feedback'
    | '/admin/genres'
    | '/admin/moderation'
    | '/admin/reports'
    | '/admin/stations'
    | '/admin/subscriptions'
    | '/admin/users'
    | '/s/new'
    | '/you/library'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/forgot-password'
    | '/otp'
    | '/sign-in'
    | '/sign-in-2'
    | '/sign-up'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/$slugName'
    | '/'
    | '/s/$stationSlug'
    | '/s/chat-popup'
    | '/settings/account'
    | '/settings/appearance'
    | '/settings/display'
    | '/settings/notifications'
    | '/subscriptions/cancel'
    | '/subscriptions/success'
    | '/admin'
    | '/browse'
    | '/creator'
    | '/settings'
    | '/subscriptions'
    | '/you'
    | '/admin/countries'
    | '/admin/feedback'
    | '/admin/genres'
    | '/admin/moderation'
    | '/admin/reports'
    | '/admin/stations'
    | '/admin/subscriptions'
    | '/admin/users'
    | '/s/new'
    | '/you/library'
  id:
    | '__root__'
    | '/_authenticated'
    | '/_authenticated/admin'
    | '/_authenticated/settings'
    | '/(auth)/forgot-password'
    | '/(auth)/otp'
    | '/(auth)/sign-in'
    | '/(auth)/sign-in-2'
    | '/(auth)/sign-up'
    | '/(errors)/401'
    | '/(errors)/403'
    | '/(errors)/404'
    | '/(errors)/500'
    | '/(errors)/503'
    | '/_authenticated/$slugName'
    | '/_authenticated/'
    | '/_authenticated/s/$stationSlug'
    | '/_authenticated/s/chat-popup'
    | '/_authenticated/settings/account'
    | '/_authenticated/settings/appearance'
    | '/_authenticated/settings/display'
    | '/_authenticated/settings/notifications'
    | '/_authenticated/subscriptions/cancel'
    | '/_authenticated/subscriptions/success'
    | '/_authenticated/admin/'
    | '/_authenticated/browse/'
    | '/_authenticated/creator/'
    | '/_authenticated/settings/'
    | '/_authenticated/subscriptions/'
    | '/_authenticated/you/'
    | '/_authenticated/admin/countries/'
    | '/_authenticated/admin/feedback/'
    | '/_authenticated/admin/genres/'
    | '/_authenticated/admin/moderation/'
    | '/_authenticated/admin/reports/'
    | '/_authenticated/admin/stations/'
    | '/_authenticated/admin/subscriptions/'
    | '/_authenticated/admin/users/'
    | '/_authenticated/s/new/'
    | '/_authenticated/you/library/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  authForgotPasswordRoute: typeof authForgotPasswordRoute
  authOtpRoute: typeof authOtpRoute
  authSignInRoute: typeof authSignInRoute
  authSignIn2Route: typeof authSignIn2Route
  authSignUpRoute: typeof authSignUpRoute
  errors401Route: typeof errors401Route
  errors403Route: typeof errors403Route
  errors404Route: typeof errors404Route
  errors500Route: typeof errors500Route
  errors503Route: typeof errors503Route
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/$slugName': {
      id: '/_authenticated/$slugName'
      path: '/$slugName'
      fullPath: '/$slugName'
      preLoaderRoute: typeof AuthenticatedSlugNameRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/(errors)/503': {
      id: '/(errors)/503'
      path: '/503'
      fullPath: '/503'
      preLoaderRoute: typeof errors503RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/500': {
      id: '/(errors)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof errors500RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/404': {
      id: '/(errors)/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof errors404RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/403': {
      id: '/(errors)/403'
      path: '/403'
      fullPath: '/403'
      preLoaderRoute: typeof errors403RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/401': {
      id: '/(errors)/401'
      path: '/401'
      fullPath: '/401'
      preLoaderRoute: typeof errors401RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/sign-up': {
      id: '/(auth)/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof authSignUpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/sign-in-2': {
      id: '/(auth)/sign-in-2'
      path: '/sign-in-2'
      fullPath: '/sign-in-2'
      preLoaderRoute: typeof authSignIn2RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/sign-in': {
      id: '/(auth)/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof authSignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/otp': {
      id: '/(auth)/otp'
      path: '/otp'
      fullPath: '/otp'
      preLoaderRoute: typeof authOtpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/forgot-password': {
      id: '/(auth)/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof authForgotPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/settings': {
      id: '/_authenticated/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthenticatedSettingsRouteRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/admin': {
      id: '/_authenticated/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AuthenticatedAdminRouteRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/you/': {
      id: '/_authenticated/you/'
      path: '/you'
      fullPath: '/you'
      preLoaderRoute: typeof AuthenticatedYouIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/subscriptions/': {
      id: '/_authenticated/subscriptions/'
      path: '/subscriptions'
      fullPath: '/subscriptions'
      preLoaderRoute: typeof AuthenticatedSubscriptionsIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/settings/': {
      id: '/_authenticated/settings/'
      path: '/'
      fullPath: '/settings/'
      preLoaderRoute: typeof AuthenticatedSettingsIndexRouteImport
      parentRoute: typeof AuthenticatedSettingsRouteRoute
    }
    '/_authenticated/creator/': {
      id: '/_authenticated/creator/'
      path: '/creator'
      fullPath: '/creator'
      preLoaderRoute: typeof AuthenticatedCreatorIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/browse/': {
      id: '/_authenticated/browse/'
      path: '/browse'
      fullPath: '/browse'
      preLoaderRoute: typeof AuthenticatedBrowseIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/admin/': {
      id: '/_authenticated/admin/'
      path: '/'
      fullPath: '/admin/'
      preLoaderRoute: typeof AuthenticatedAdminIndexRouteImport
      parentRoute: typeof AuthenticatedAdminRouteRoute
    }
    '/_authenticated/subscriptions/success': {
      id: '/_authenticated/subscriptions/success'
      path: '/subscriptions/success'
      fullPath: '/subscriptions/success'
      preLoaderRoute: typeof AuthenticatedSubscriptionsSuccessRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/subscriptions/cancel': {
      id: '/_authenticated/subscriptions/cancel'
      path: '/subscriptions/cancel'
      fullPath: '/subscriptions/cancel'
      preLoaderRoute: typeof AuthenticatedSubscriptionsCancelRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/settings/notifications': {
      id: '/_authenticated/settings/notifications'
      path: '/notifications'
      fullPath: '/settings/notifications'
      preLoaderRoute: typeof AuthenticatedSettingsNotificationsRouteImport
      parentRoute: typeof AuthenticatedSettingsRouteRoute
    }
    '/_authenticated/settings/display': {
      id: '/_authenticated/settings/display'
      path: '/display'
      fullPath: '/settings/display'
      preLoaderRoute: typeof AuthenticatedSettingsDisplayRouteImport
      parentRoute: typeof AuthenticatedSettingsRouteRoute
    }
    '/_authenticated/settings/appearance': {
      id: '/_authenticated/settings/appearance'
      path: '/appearance'
      fullPath: '/settings/appearance'
      preLoaderRoute: typeof AuthenticatedSettingsAppearanceRouteImport
      parentRoute: typeof AuthenticatedSettingsRouteRoute
    }
    '/_authenticated/settings/account': {
      id: '/_authenticated/settings/account'
      path: '/account'
      fullPath: '/settings/account'
      preLoaderRoute: typeof AuthenticatedSettingsAccountRouteImport
      parentRoute: typeof AuthenticatedSettingsRouteRoute
    }
    '/_authenticated/s/chat-popup': {
      id: '/_authenticated/s/chat-popup'
      path: '/s/chat-popup'
      fullPath: '/s/chat-popup'
      preLoaderRoute: typeof AuthenticatedSChatPopupRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/s/$stationSlug': {
      id: '/_authenticated/s/$stationSlug'
      path: '/s/$stationSlug'
      fullPath: '/s/$stationSlug'
      preLoaderRoute: typeof AuthenticatedSStationSlugRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/you/library/': {
      id: '/_authenticated/you/library/'
      path: '/you/library'
      fullPath: '/you/library'
      preLoaderRoute: typeof AuthenticatedYouLibraryIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/s/new/': {
      id: '/_authenticated/s/new/'
      path: '/s/new'
      fullPath: '/s/new'
      preLoaderRoute: typeof AuthenticatedSNewIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/admin/users/': {
      id: '/_authenticated/admin/users/'
      path: '/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof AuthenticatedAdminUsersIndexRouteImport
      parentRoute: typeof AuthenticatedAdminRouteRoute
    }
    '/_authenticated/admin/subscriptions/': {
      id: '/_authenticated/admin/subscriptions/'
      path: '/subscriptions'
      fullPath: '/admin/subscriptions'
      preLoaderRoute: typeof AuthenticatedAdminSubscriptionsIndexRouteImport
      parentRoute: typeof AuthenticatedAdminRouteRoute
    }
    '/_authenticated/admin/stations/': {
      id: '/_authenticated/admin/stations/'
      path: '/stations'
      fullPath: '/admin/stations'
      preLoaderRoute: typeof AuthenticatedAdminStationsIndexRouteImport
      parentRoute: typeof AuthenticatedAdminRouteRoute
    }
    '/_authenticated/admin/reports/': {
      id: '/_authenticated/admin/reports/'
      path: '/reports'
      fullPath: '/admin/reports'
      preLoaderRoute: typeof AuthenticatedAdminReportsIndexRouteImport
      parentRoute: typeof AuthenticatedAdminRouteRoute
    }
    '/_authenticated/admin/moderation/': {
      id: '/_authenticated/admin/moderation/'
      path: '/moderation'
      fullPath: '/admin/moderation'
      preLoaderRoute: typeof AuthenticatedAdminModerationIndexRouteImport
      parentRoute: typeof AuthenticatedAdminRouteRoute
    }
    '/_authenticated/admin/genres/': {
      id: '/_authenticated/admin/genres/'
      path: '/genres'
      fullPath: '/admin/genres'
      preLoaderRoute: typeof AuthenticatedAdminGenresIndexRouteImport
      parentRoute: typeof AuthenticatedAdminRouteRoute
    }
    '/_authenticated/admin/feedback/': {
      id: '/_authenticated/admin/feedback/'
      path: '/feedback'
      fullPath: '/admin/feedback'
      preLoaderRoute: typeof AuthenticatedAdminFeedbackIndexRouteImport
      parentRoute: typeof AuthenticatedAdminRouteRoute
    }
    '/_authenticated/admin/countries/': {
      id: '/_authenticated/admin/countries/'
      path: '/countries'
      fullPath: '/admin/countries'
      preLoaderRoute: typeof AuthenticatedAdminCountriesIndexRouteImport
      parentRoute: typeof AuthenticatedAdminRouteRoute
    }
  }
}

interface AuthenticatedAdminRouteRouteChildren {
  AuthenticatedAdminIndexRoute: typeof AuthenticatedAdminIndexRoute
  AuthenticatedAdminCountriesIndexRoute: typeof AuthenticatedAdminCountriesIndexRoute
  AuthenticatedAdminFeedbackIndexRoute: typeof AuthenticatedAdminFeedbackIndexRoute
  AuthenticatedAdminGenresIndexRoute: typeof AuthenticatedAdminGenresIndexRoute
  AuthenticatedAdminModerationIndexRoute: typeof AuthenticatedAdminModerationIndexRoute
  AuthenticatedAdminReportsIndexRoute: typeof AuthenticatedAdminReportsIndexRoute
  AuthenticatedAdminStationsIndexRoute: typeof AuthenticatedAdminStationsIndexRoute
  AuthenticatedAdminSubscriptionsIndexRoute: typeof AuthenticatedAdminSubscriptionsIndexRoute
  AuthenticatedAdminUsersIndexRoute: typeof AuthenticatedAdminUsersIndexRoute
}

const AuthenticatedAdminRouteRouteChildren: AuthenticatedAdminRouteRouteChildren =
  {
    AuthenticatedAdminIndexRoute: AuthenticatedAdminIndexRoute,
    AuthenticatedAdminCountriesIndexRoute:
      AuthenticatedAdminCountriesIndexRoute,
    AuthenticatedAdminFeedbackIndexRoute: AuthenticatedAdminFeedbackIndexRoute,
    AuthenticatedAdminGenresIndexRoute: AuthenticatedAdminGenresIndexRoute,
    AuthenticatedAdminModerationIndexRoute:
      AuthenticatedAdminModerationIndexRoute,
    AuthenticatedAdminReportsIndexRoute: AuthenticatedAdminReportsIndexRoute,
    AuthenticatedAdminStationsIndexRoute: AuthenticatedAdminStationsIndexRoute,
    AuthenticatedAdminSubscriptionsIndexRoute:
      AuthenticatedAdminSubscriptionsIndexRoute,
    AuthenticatedAdminUsersIndexRoute: AuthenticatedAdminUsersIndexRoute,
  }

const AuthenticatedAdminRouteRouteWithChildren =
  AuthenticatedAdminRouteRoute._addFileChildren(
    AuthenticatedAdminRouteRouteChildren,
  )

interface AuthenticatedSettingsRouteRouteChildren {
  AuthenticatedSettingsAccountRoute: typeof AuthenticatedSettingsAccountRoute
  AuthenticatedSettingsAppearanceRoute: typeof AuthenticatedSettingsAppearanceRoute
  AuthenticatedSettingsDisplayRoute: typeof AuthenticatedSettingsDisplayRoute
  AuthenticatedSettingsNotificationsRoute: typeof AuthenticatedSettingsNotificationsRoute
  AuthenticatedSettingsIndexRoute: typeof AuthenticatedSettingsIndexRoute
}

const AuthenticatedSettingsRouteRouteChildren: AuthenticatedSettingsRouteRouteChildren =
  {
    AuthenticatedSettingsAccountRoute: AuthenticatedSettingsAccountRoute,
    AuthenticatedSettingsAppearanceRoute: AuthenticatedSettingsAppearanceRoute,
    AuthenticatedSettingsDisplayRoute: AuthenticatedSettingsDisplayRoute,
    AuthenticatedSettingsNotificationsRoute:
      AuthenticatedSettingsNotificationsRoute,
    AuthenticatedSettingsIndexRoute: AuthenticatedSettingsIndexRoute,
  }

const AuthenticatedSettingsRouteRouteWithChildren =
  AuthenticatedSettingsRouteRoute._addFileChildren(
    AuthenticatedSettingsRouteRouteChildren,
  )

interface AuthenticatedRouteRouteChildren {
  AuthenticatedAdminRouteRoute: typeof AuthenticatedAdminRouteRouteWithChildren
  AuthenticatedSettingsRouteRoute: typeof AuthenticatedSettingsRouteRouteWithChildren
  AuthenticatedSlugNameRoute: typeof AuthenticatedSlugNameRoute
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedSStationSlugRoute: typeof AuthenticatedSStationSlugRoute
  AuthenticatedSChatPopupRoute: typeof AuthenticatedSChatPopupRoute
  AuthenticatedSubscriptionsCancelRoute: typeof AuthenticatedSubscriptionsCancelRoute
  AuthenticatedSubscriptionsSuccessRoute: typeof AuthenticatedSubscriptionsSuccessRoute
  AuthenticatedBrowseIndexRoute: typeof AuthenticatedBrowseIndexRoute
  AuthenticatedCreatorIndexRoute: typeof AuthenticatedCreatorIndexRoute
  AuthenticatedSubscriptionsIndexRoute: typeof AuthenticatedSubscriptionsIndexRoute
  AuthenticatedYouIndexRoute: typeof AuthenticatedYouIndexRoute
  AuthenticatedSNewIndexRoute: typeof AuthenticatedSNewIndexRoute
  AuthenticatedYouLibraryIndexRoute: typeof AuthenticatedYouLibraryIndexRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedAdminRouteRoute: AuthenticatedAdminRouteRouteWithChildren,
  AuthenticatedSettingsRouteRoute: AuthenticatedSettingsRouteRouteWithChildren,
  AuthenticatedSlugNameRoute: AuthenticatedSlugNameRoute,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedSStationSlugRoute: AuthenticatedSStationSlugRoute,
  AuthenticatedSChatPopupRoute: AuthenticatedSChatPopupRoute,
  AuthenticatedSubscriptionsCancelRoute: AuthenticatedSubscriptionsCancelRoute,
  AuthenticatedSubscriptionsSuccessRoute:
    AuthenticatedSubscriptionsSuccessRoute,
  AuthenticatedBrowseIndexRoute: AuthenticatedBrowseIndexRoute,
  AuthenticatedCreatorIndexRoute: AuthenticatedCreatorIndexRoute,
  AuthenticatedSubscriptionsIndexRoute: AuthenticatedSubscriptionsIndexRoute,
  AuthenticatedYouIndexRoute: AuthenticatedYouIndexRoute,
  AuthenticatedSNewIndexRoute: AuthenticatedSNewIndexRoute,
  AuthenticatedYouLibraryIndexRoute: AuthenticatedYouLibraryIndexRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  authForgotPasswordRoute: authForgotPasswordRoute,
  authOtpRoute: authOtpRoute,
  authSignInRoute: authSignInRoute,
  authSignIn2Route: authSignIn2Route,
  authSignUpRoute: authSignUpRoute,
  errors401Route: errors401Route,
  errors403Route: errors403Route,
  errors404Route: errors404Route,
  errors500Route: errors500Route,
  errors503Route: errors503Route,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
